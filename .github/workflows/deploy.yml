name: Deploy CIVideo Application

on:
  push:
    branches: [ main ]

env:
  FULL_IMAGE_NAME: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}
  APPLICATION_SECRET_FILE_PATH: src/main/resources/application-secret.yml
  APPLE_AUTH_KEY_FILE_PATH: src/main/resources/key/AuthKey.p8

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build image and push to docker hub
        run: |
          cat << EOF >> ${{ env.APPLICATION_SECRET_FILE_PATH }}
          ${{ secrets.APPLICATION_SECRET }}
          EOF
          cat << EOF >> ${{ env.APPLE_AUTH_KEY_FILE_PATH }}
          ${{ secrets.APPLE_AUTH_KEY }}
          EOF
          SPRING_PROFILES_ACTIVE=dev ./gradlew clean build --warning-mode=all --stacktrace --no-daemon
          docker build -t ${{ env.FULL_IMAGE_NAME }} .
          docker login \
            --username ${{ secrets.DOCKER_USER }} \
            --password ${{ secrets.DOCKER_USER_PASSWORD }}
          docker push ${{ env.FULL_IMAGE_NAME }}

      - name: Connect to server and restart container
        uses: fifsky/ssh-action@v0.0.5
        if: ${{ success() }}
        with:
          command: |
            sudo su
            docker pull ${{ env.FULL_IMAGE_NAME }}
            docker stop ${{ secrets.IMAGE_NAME }}
            docker rm ${{ secrets.IMAGE_NAME }}
            docker run \
              --name ${{ secrets.IMAGE_NAME }} \
              --detach \
              --publish 80:8080 \
              --volume /var/log/${{ secrets.IMAGE_NAME }}:/tmp/log/${{ secrets.IMAGE_NAME }} \
              --env SPRING_PROFILES_ACTIVE=dev \
              ${{ env.FULL_IMAGE_NAME }}
          host: ${{ secrets.SERVER_IP }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}

      - name: Send GitHub Action trigger data to Slack workflow
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Deploy Workflow
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
